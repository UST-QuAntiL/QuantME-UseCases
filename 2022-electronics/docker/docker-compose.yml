version: '3'

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:latest #RELEASE.2022-01-27T03-53-02Z
  command: server --console-address ":9001"  http://minio{1...2}/data{1...2} 
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minio
    MINIO_ROOT_PASSWORD: minio123
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3
  networks:
    - modulo-demo

services:
  ### Camunda Engine ###
  camunda-engine:
    build: camunda
    ports:
      - 8080:8080
    networks:
      - modulo-demo
  ### OpenTOSCA Ecosystem ###
  container:
    image: opentosca/container:v3.0.0
    ports:
      - '1337:1337'
      - '8081-8087:8081-8087'
    environment:
      CONTAINER_HOSTNAME: $PUBLIC_HOSTNAME
      ENGINE_IA_HOSTNAME: engine-ia
      ENGINE_IA_PORT: 8080
      ENGINE_PLAN_BPEL_HOSTNAME: engine-plan
      CONTAINER_DEPLOYMENT_TESTS: 'false'
    networks:
      - modulo-demo
  engine-plan:
    image: opentosca/ode:v2.4.0
    networks:
      - modulo-demo
  engine-ia:
    image: opentosca/engine-ia:v2.1.0
    networks:
      - modulo-demo
  winery:
    build: initialized-winery
    logging:
      driver: none
    ports:
      - '8093:8080'
    environment:
      WINERY_HOSTNAME: $PUBLIC_HOSTNAME
      WORKFLOWMODELER_HOSTNAME: $PUBLIC_HOSTNAME
      TOPOLOGYMODELER_HOSTNAME: $PUBLIC_HOSTNAME
      CONTAINER_HOSTNAME: $PUBLIC_HOSTNAME
    networks:
      - modulo-demo
  dind:
    image: opentosca/dind:v1.0.0
    privileged: true
    environment:
      - PORT=2375
      # University of Stuttgart internal DNS settings
      - DOCKER_DAEMON_ARGS=--dns 129.69.211.1 --dns 129.69.215.5 -D
     # - DOCKER_DAEMON_ARGS=--dns 8.8.8.8 --dns 8.8.4.4 -D
    networks:
      - modulo-demo
  ### Error-Mitigation Service ###
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
    networks:
      - modulo-demo
  error-mitigation-service:
    image: planqk/error-mitigation-service:v0.0.1
    command: app.py
    ports:
      - "5071:5000"
    environment:
      - MINIO_URL=nginx:9000
    depends_on:
      - nginx
    networks:
      - modulo-demo

networks:
  modulo-demo:
    driver: bridge
