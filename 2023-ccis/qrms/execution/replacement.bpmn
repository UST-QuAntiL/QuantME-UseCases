<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" id="Definitions_0b7il2s" targetNamespace="http://bpmn.io/schema/bpmn" exporter="QuantME Modeler" exporterVersion="4.5.0-nightly.20220628">
  <bpmn:process id="Process_03tgi13" isExecutable="true">
    <bpmn:serviceTask id="ServiceTask_1d6l6i7" name="Execute Circuit">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="url">http://quokka-gateway:6474/quokka/circuit-execution/execution-service</camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">var qpu = execution.getVariable("qpu");
                var noiseModel = execution.getVariable("noiseModel");
				var onlyMeasurementErrors = execution.getVariable("onlyMeasurementErrors");
				var token = execution.getVariable("token");
				var hub = execution.getVariable("hub");
				var group = execution.getVariable("group");
				var project = execution.getVariable("project");
				var url = execution.getVariable("ibmqUrl");
				var circuit = execution.getVariable("circuit");
                circuit = circuit.prop("circuit").value()
								var shots = execution.getVariable("shots");
                shots = parseInt(shots);
                
                
                var myJson = {"provider": "ibm", "qpu": qpu,"circuit": circuit, "shots": shots, "credentials":{
                    "token": token, "hub": hub, "group": group, "project":project, "url":url
                    }
					, "noise_model": noiseModel, "only_measurement_errors": onlyMeasurementErrors
                };
               
                

                myJson = JSON.stringify(myJson);
myJson =myJson;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="counts">
              <camunda:script scriptFormat="JavaScript">
var resp = connector.getVariable("response")
resp = JSON.parse(resp)
var counts = S(JSON.stringify({"counts":resp.counts}));
counts;

</camunda:script>
            </camunda:outputParameter>
            <camunda:outputParameter name="measQubits">
              <camunda:script scriptFormat="JavaScript">
var resp = connector.getVariable("response")
                resp = JSON.parse(resp)
                var meas_qubits = "["+resp.meas_qubits.toString()+"]";
								meas_qubits;
</camunda:script>
            </camunda:outputParameter>
            <camunda:outputParameter name="circuitDepthTranspiled">
              <camunda:script scriptFormat="JavaScript">
var resp = connector.getVariable("response")
                resp = JSON.parse(resp)
                var circuitDepthTranspiled = resp.transpiled_circuit_depth;
								circuitDepthTranspiled;
</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
    </bpmn:serviceTask>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_03tgi13">
      <bpmndi:BPMNShape id="ServiceTask_1d6l6i7_di" bpmnElement="ServiceTask_1d6l6i7">
        <dc:Bounds x="160" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>